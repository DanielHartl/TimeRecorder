trigger:
- master

pr:
- master

jobs:
- job: Main
  pool:
    vmImage: 'Ubuntu 16.04'

  variables:
  - group: 'ACR secrets'

  steps:
  - script: ./run-tests.sh

  - script: |
      cd agent/src/Agent.App
      dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)/TimeRecorder.Agent.App

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/TimeRecorder.Agent.App' 
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/TimeRecorder.Agent.zip' 
      replaceExistingArchive: true 
      verbose: true

  - task: AzureCLI@1
    inputs:
      connectedServiceNameARM: TimeRec
      scriptLocation: inlineScript
      inlineScript: az storage blob upload --account-name timerec --container-name public -n TimeRecorder.Agent.zip -f '$(Build.ArtifactStagingDirectory)/TimeRecorder.Agent.zip'
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    
  - script: |
      docker build -t $(ACRUserName).azurecr.io/time-recorder/server:$(Build.BuildNumber) server
      docker login -u $(ACRUserName) -p $(ACRPassword) $(ACRLoginServer)
      docker push $(ACRUserName).azurecr.io/time-recorder/server:$(Build.BuildNumber)
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
